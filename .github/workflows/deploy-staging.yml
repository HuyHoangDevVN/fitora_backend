name: Deploy Microservices to Staging

on:
  push:
    branches:
      - staging

jobs:
  build-and-deploy:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Build and Publish AuthService
        run: |
          dotnet restore
          dotnet build --configuration Release --no-restore
          dotnet publish --configuration Release --output ./publish/authservice --no-restore --no-build
        working-directory: ./Services/AuthService/AuthService.API
        shell: powershell

      - name: Build and Publish ChatService
        run: |
          dotnet restore
          dotnet build --configuration Release --no-restore
          dotnet publish --configuration Release --output ./publish/chatservice --no-restore --no-build
        working-directory: ./Services/ChatService/ChatService.API
        shell: powershell

      - name: Build and Publish InteractService
        run: |
          dotnet restore
          dotnet build --configuration Release --no-restore
          dotnet publish --configuration Release --output ./publish/interactservice --no-restore --no-build
        working-directory: ./Services/InteractService/InteractService.API
        shell: powershell

      - name: Build and Publish UserService
        run: |
          dotnet restore
          dotnet build --configuration Release --no-restore
          dotnet publish --configuration Release --output ./publish/userservice --no-restore --no-build
        working-directory: ./Services/UserService/UserService.API
        shell: powershell

      - name: Build and Publish ApiGateway
        run: |
          dotnet restore
          dotnet build --configuration Release --no-restore
          dotnet publish --configuration Release --output ./publish/apigateway --no-restore --no-build
        working-directory: ./ApiGateways/ApiGateway
        shell: powershell

      - name: Deploy to Windows Server
        run: |
          $ErrorActionPreference = "Stop"
          $privateKey = "${{ secrets.SSH_PRIVATE_KEY }}"
          $privateKeyPath = "C:\Users\Administrator\.ssh\id_rsa"
          $sshDir = Split-Path $privateKeyPath

          if (!(Test-Path $sshDir)) {
            New-Item -ItemType Directory -Path $sshDir -Force | Out-Null
          }

          Set-Content -Path $privateKeyPath -Value $privateKey
          icacls $privateKeyPath /inheritance:r /grant:r "$env:USERNAME:F"
          $services = @("authservice", "chatservice", "interactservice", "userservice", "apigateway")
          $script = @'
            param([string[]]$services)
            net stop was
            foreach ($service in $services) {
              $targetPath = "C:\inetpub\wwwroot\$service"
              Remove-Item -Path "$targetPath\*" -Recurse -Force -ErrorAction SilentlyContinue
              Copy-Item -Path ".\publish\$service\*" -Destination $targetPath -Recurse
            }
            net start w3svc
          '@
          $scriptBlock = "$script; Invoke-Command -ScriptBlock { param(\$services) . { $script } } -ArgumentList @($services)"

          ssh -i $privateKeyPath -o StrictHostKeyChecking=no -p 22 `
            ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} `
            "powershell -NoProfile -Command `"& { $scriptBlock }`""
        shell: pwsh
